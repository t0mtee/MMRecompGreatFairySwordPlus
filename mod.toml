# Config file for an example Majora's Mask: Recompiled mod.

# Fields that end up in the mod's manifest.
[manifest]

# Unique ID of this mod. Pick something long enough that it'll never be the same as any other mod.
# The name displayed in the mod management menu is separate from this so this doesn't need to be human readable.
id = "mm_recomp_great_fairy_sword_plus"

# Version of this mod.
version = "1.0.0"

# The name that will show up for this mod in the mod menu. This should be human readable.
display_name = "Great Fairy Sword Plus"

# The description that will show up when this mod is displayed in the mod menu. This should be human readable.
description =  """
Allows the Great Fairy Sword to be equipped to the Attack button, overriding the player's current sword.

If you have it installed, place this mod below Forms Use More Items.
"""

# A short description that will show up in this mod's entry in the mod list. This should be human readable and kept short
# to prevent it from being cut off due to the limited space.
short_description = "Equip the Great Fairy Sword to the Attack Button."

# Authors of this mod.
authors = [ "tomtee" ]

# ID of the target recomp game.
game_id = "mm"

# Minimum version of the target recomp (e.g. Zelda 64: Recompiled) that this mod can run on.
minimum_recomp_version = "1.2.0"

# Dependency mods. Each entry is the mod's ID and then an optional minimum version of the dependency mod.
dependencies = [ "MM_EZ_Text_Replacer_API:2.0.0" ]

# Optional dependency mods. This has the same format as `dependencies`, but the game will still start if dependencies in this
# list aren't present. You can query the presence of a given dependency by using `recomp_is_dependency_met` in recomputils.h.
# Calling a function imported from an optional dependency that isn't present will trigger an error.
optional_dependencies = [ ]

# Native libraries (e.g. DLLs) and the functions they export.
native_libraries = [
# Example native library:
#    { name = "my_native_library", funcs = ["my_native_library_function"] }
]

# Inputs to the mod tool.
[inputs]

# Input elf file to generate a mod from.
elf_path = "build/mod.elf"

# Output mod filename.
mod_filename = "mm_recomp_great_fairy_sword_plus"

# Reference symbol files.
func_reference_syms_file = "Zelda64RecompSyms/mm.us.rev1.syms.toml"
data_reference_syms_files = [ "Zelda64RecompSyms/mm.us.rev1.datasyms.toml", "Zelda64RecompSyms/mm.us.rev1.datasyms_static.toml" ]

# Additional files to include in the mod.
additional_files = [ "thumb.png" ]